# Client configuration file example

# Note on units: when memory size is needed, it is possible to specify
# it in the usual form of 1k 5GB 4M and so forth:
#
# 1kb => 1024 bytes
# 1mb => 1024*1024 bytes
# 1gb => 1024*1024*1024 bytes
#
# units are case insensitive so 1GB 1Gb 1gB are all the same.

# Note on units: when time duration is needed, it is possible to specify
# it in the usual form of 1s 5M 4h and so forth:
#
# 1s => 1000 * 1000 * 1000 nanoseconds
# 1m => 60 seconds
# 1h => 60 minutes
#
# units are case insensitive so 1h 1H are all the same.

[base]
# When running daemonized, Comet writes a pid file in 
# /tmp/comet.pid by default. You can specify a custom pid file 
# location here.
pidfile /tmp/comet_client.pid

# Sets the maximum number of CPUs that can be executing simultaneously.
# This call will go away when the scheduler improves. By default the number of 
# logical CPUs is set.
# 
# maxproc 4

# The working directory.
#
# The log will be written inside this directory, with the filename specified
# above using the 'logfile' configuration directive.
#  
# Note that you must specify a directory here, not a file name.
dir ./

# Log4go configuration xml path.
#
# Examples:
#
# log /xxx/xxx/log.xml
log ./log.xml

[cert]
# generate certificate command:
# openssl genrsa -out key.pem 2048
# openssl req -new -x509 -key key.pem -out cert.pem -days 3650
cert.file ../../source/cert.pem

[proto]
# select connections type
# 0: tcp
# 1: websocket
# 2: websocket tls
type 0

# By default comet listens for connections from all the network interfaces
# available on the server on 6969 port. It is possible to listen to just one or 
# multiple interfaces using the "tcp.bind" configuration directive, followed by 
# one or more IP addresses and port.
#
# Examples:
#
# Note this directive is only support "tcp" protocol
# tcp.addr 127.0.0.1:6969
# tcp.addr 0.0.0.0:6969
tcp.addr localhost:8080

websocket.addr localhost:8090

# SO_SNDBUF and SO_RCVBUF are options to adjust the normal buffer sizes 
# allocated for output and input buffers, respectively.  The buffer size may 
# be increased for high-volume connections, or may be decreased to limit the 
# possible backlog of incoming data.  The system places an absolute limit on 
# these values.
# 
# Sets the maximum socket send buffer in bytes.  The kernel doubles
# this value (to allow space for bookkeeping overhead) when it is set using
# setsockopt(2). The default value is set by the 
# /proc/sys/net/core/wmem_default file and the maximum allowed value is set by 
# the /proc/sys/net/core/wmem_max file.  The minimum (doubled) value for this 
# option is 2048.
sndbuf 2048

# Sets the maximum socket receive buffer in bytes. The kernel doubles this 
# value (to allow space for bookkeeping overhead) when it is set using 
# setsockopt(2). The default value is set by the 
# /proc/sys/net/core/rmem_default file, and the maximum allowed value is set by 
# the /proc/sys/net/core/rmem_max file. The minimum (doubled) value 
# for this option is 256.
rcvbuf 256

[crypto]
# First handshake use rsa encrypt the request. 
# set the rsa private key pem file path.
#
# Examples:
#
# rsa.private ./pri.pem
rsa.public ./pub.pem

[sub]
sub.key 111
